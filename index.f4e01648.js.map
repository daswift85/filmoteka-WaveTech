{"mappings":"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","sources":["src/index.js","src/js/searchByKeyword.js","src/js/filter/filterByTopRated.js","src/js/filter/filterByNowPlaying.js","src/js/filter/filterByPopular.js","src/js/filter/filterByUpcoming.js"],"sourcesContent":["import './js/library';\r\nimport './js/genresList';\r\nimport './js/genresListFormat';\r\nimport './js/darktheme.js';\r\nimport './js/movieReleaseYearFormat';\r\nimport './js/api/movieAPI';\r\nimport './js/api/varsAPI';\r\nimport './js/render/render-cards-main-page';\r\nimport './js/render/markup-cards-main-page';\r\nimport './js/refs';\r\nimport './js/components/spinner';\r\nimport './js/team-modal.js';\r\nimport './js/searchByKeyword';\r\nimport './js/filter/filterByWeeklyTrending';\r\nimport './js/render/movie-modal';\r\nimport './js/render/open-and-close-modal';\r\nimport './js/loader';\r\nimport './js/components/pagination2.js';\r\nimport './js/filter/filterByTopRated';\r\nimport './js/filter/filterByNowPlaying';\r\nimport './js/filter/filterByPopular';\r\nimport './js/filter/filterByUpcoming';\r\nimport './js/btnaddtoLocalStorage';\r\nimport './js/components/toTopBottomBtn';\r\n","import Notiflix from 'notiflix';\nimport refs from './refs';\nimport { getMovieByKeyword } from './api/movieAPI';\nimport { createGalleryMarkup } from './render/markup-cards-main-page';\nimport { spinner } from './components/spinner';\n\nrefs.searchForm.addEventListener('submit', async event => {\n  event.preventDefault();\n\n  spinner('start');\n\n  const searchQuery = refs.searchInput.value.trim();\n  if (searchQuery === '') {\n    Notiflix.Notify.failure(\n      'Пожалуйста, введите ключевое слово для поиска фильмов',\n      {\n        position: 'center-center',\n        timeout: 3000,\n      }\n    );\n\n    spinner('stop');\n    return;\n  }\n\n  // Функция для поиска фильмов по ключевому слову и похожим названиям\n  const searchMovies = async query => {\n    const response = await fetch(\n      `https://api.example.com/movies?query=${query}`\n    );\n    const movies = await response.json();\n\n    // Создаем регулярное выражение для поиска похожих названий фильмов\n    const regex = new RegExp(`.*${query.split('').join('.*')}.*`, 'i');\n\n    // Фильтруем полученные результаты по регулярному выражению\n    const similarMovies = movies.filter(movie => regex.test(movie.title));\n\n    return similarMovies;\n  };\n\n  const searchResults = await getMovieByKeyword(searchQuery, 1);\n\n  if (searchResults.results.length === 0) {\n    Notiflix.Notify.warning(\n      'Notyflix: По вашему запросу ничего не найдено. Пожалуйста, повторите поиск.',\n      {\n        position: 'center-center',\n        timeout: 3000,\n      }\n    );\n  } else {\n    refs.gallery.innerHTML = '';\n    const moviesMarkup = createGalleryMarkup(searchResults.results);\n    refs.gallery.insertAdjacentHTML('beforeend', moviesMarkup);\n  }\n\n  spinner('stop');\n\n  refs.searchInput.value = '';\n});\n","import { getTopRatedMovie } from '../api/movieAPI';\nimport { createGalleryMarkup } from '../render/markup-cards-main-page';\nimport { spinner } from '../components/spinner';\nimport refs from '../refs';\n\nconst galleryMovie = refs.gallery;\n\nrefs.topRatedBtn.addEventListener('click', async function (event) {\n  try {\n    spinner('start');\n    const weeklyTrendingMovies = await getTopRatedMovie();\n    // Очищаем текущую разметку галереи перед вставкой новых данных\n    galleryMovie.innerHTML = '';\n    galleryMovie.insertAdjacentHTML(\n      'beforeend',\n      createGalleryMarkup(weeklyTrendingMovies.results)\n    );\n    spinner('stop');\n  } catch (error) {\n    console.log(error);\n  }\n});\n","import { getTopRatedMovie } from '../api/movieAPI';\nimport { createGalleryMarkup } from '../render/markup-cards-main-page';\nimport { spinner } from '../components/spinner';\nimport refs from '../refs';\n\nconst galleryMovie = refs.gallery;\n\nrefs.nowPlayingBtn.addEventListener('click', async function (event) {\n  try {\n    spinner('start');\n    const weeklyTrendingMovies = await getTopRatedMovie('now_playing');\n    galleryMovie.innerHTML = '';\n    galleryMovie.insertAdjacentHTML(\n      'beforeend',\n      createGalleryMarkup(weeklyTrendingMovies.results)\n    );\n    spinner('stop');\n  } catch (error) {\n    console.log(error);\n  }\n});\n","import { getTopRatedMovie } from '../api/movieAPI';\nimport { createGalleryMarkup } from '../render/markup-cards-main-page';\nimport { spinner } from '../components/spinner';\nimport refs from '../refs';\n\nconst galleryMovie = refs.gallery;\n\nrefs.popularBtn.addEventListener('click', async function (event) {\n  try {\n    spinner('start');\n    const weeklyTrendingMovies = await getTopRatedMovie('popular');\n    // Очищаем текущую разметку галереи перед вставкой новых данных\n    galleryMovie.innerHTML = '';\n    galleryMovie.insertAdjacentHTML(\n      'beforeend',\n      createGalleryMarkup(weeklyTrendingMovies.results)\n    );\n    spinner('stop');\n  } catch (error) {\n    console.log(error);\n  }\n});\n","import { getTopRatedMovie } from '../api/movieAPI';\nimport { createGalleryMarkup } from '../render/markup-cards-main-page';\nimport { spinner } from '../components/spinner';\nimport refs from '../refs';\n\nconst galleryMovie = refs.gallery;\n\nrefs.upcomingBtn.addEventListener('click', async function (event) {\n  try {\n    spinner('start');\n    const weeklyTrendingMovies = await getTopRatedMovie('upcoming');\n    galleryMovie.innerHTML = '';\n    galleryMovie.insertAdjacentHTML(\n      'beforeend',\n      createGalleryMarkup(weeklyTrendingMovies.results)\n    );\n    spinner('stop');\n  } catch (error) {\n    console.log(error);\n  }\n});\n"],"names":["parcelRequire","$bpxeT","$4Nugj","default","searchForm","addEventListener","$parcel$interopDefault","$2TvXO","mark","_callee1","event","searchQuery","searchResults","moviesMarkup","preventDefault","$64MGL","spinner","searchInput","value","trim","$6JpON","Notify","failure","position","timeout","_callee","query","response","movies","regex","similarMovies","fetch","concat","_ctx","sent","json","RegExp","split","join","filter","movie","test","title","$8NbBk","getMovieByKeyword","_ctx1","results","length","warning","gallery","innerHTML","$b5IIj","createGalleryMarkup","insertAdjacentHTML","$6e4cea8b6173362d$var$galleryMovie","topRatedBtn","weeklyTrendingMovies","getTopRatedMovie","console","log","t0","$e821c63224fdc835$var$galleryMovie","nowPlayingBtn","$da50e8422769df59$var$galleryMovie","popularBtn","$45a6374e0a61620f$var$galleryMovie","upcomingBtn"],"version":3,"file":"index.f4e01648.js.map"}